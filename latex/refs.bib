@article{PhysRevD.11.395,
  title = {Hamiltonian formulation of Wilson's lattice gauge theories},
  author = {Kogut, John and Susskind, Leonard},
  journal = {Phys. Rev. D},
  volume = {11},
  issue = {2},
  pages = {395--408},
  numpages = {0},
  year = {1975},
  month = {Jan},
  publisher = {American Physical Society},
  doi = {10.1103/PhysRevD.11.395},
  url = {https://link.aps.org/doi/10.1103/PhysRevD.11.395},
}


@article{RevModPhys.51.659,
  title = {An introduction to lattice gauge theory and spin systems},
  author = {Kogut, John B.},
  journal = {Rev. Mod. Phys.},
  volume = {51},
  issue = {4},
  pages = {659--713},
  numpages = {0},
  year = {1979},
  month = {Oct},
  publisher = {American Physical Society},
  doi = {10.1103/RevModPhys.51.659},
  url = {https://link.aps.org/doi/10.1103/RevModPhys.51.659},
}

@article{PRIMME,
  author = {Andreas Stathopoulos and James R. McCombs},
  title = {{PRIMME}: {PR}econditioned {I}terative {M}ulti{M}ethod {E}igensolver:
           Methods and software description},
  journal = {ACM Transactions on Mathematical Software},
  volume = {37},
  number = {2},
  year = {2010},
  pages = {21:1--21:30},
}

@article{svds_software,
  author = {Lingfei Wu and Eloy Romero and Andreas Stathopoulos},
  title = {PRIMME{\_}SVDS: {A} High-Performance Preconditioned {SVD} Solver for
           Accurate Large-Scale Computations},
  journal = {SIAM Journal on Scientific Computing},
  volume = {39},
  number = {5},
  pages = {S248--S271},
  year = {2017},
  doi = {10.1137/16M1082214},
  url = { https://doi.org/10.1137/16M1082214 },
}

@misc{crippa2024,
  title = {Towards determining the (2+1)-dimensional Quantum Electrodynamics
           running coupling with Monte Carlo and quantum computing methods},
  author = {Arianna Crippa and Simone Romiti and Lena Funcke and Karl Jansen and
            Stefan KÃ¼hn and Paolo Stornati and Carsten Urbach},
  year = {2024},
  eprint = {2404.17545},
  archivePrefix = {arXiv},
  primaryClass = {hep-lat},
  url = {https://arxiv.org/abs/2404.17545},
}

@article{2020SciPy-NMeth,
  author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and
            Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski,
            Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan
            and {van der Walt}, St{\'e}fan J. and Brett, Matthew and Wilson,
            Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew
            R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C
            J and Polat, {\.I}lhan and Feng, Yu and Moore, Eric W. and {
            VanderPlas}, Jake and Laxalde, Denis and Perktold, Josef and Cimrman,
            Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R.
            and Archibald, Anne M. and Ribeiro, Ant{\^o}nio H. and Pedregosa,
            Fabian and {van Mulbregt}, Paul and {SciPy 1.0 Contributors}},
  title = {{{SciPy} 1.0: Fundamental Algorithms for Scientific Computing in
           Python}},
  journal = {Nature Methods},
  year = {2020},
  volume = {17},
  pages = {261--272},
  adsurl = {https://rdcu.be/b08Wh},
  doi = {10.1038/s41592-019-0686-2},
}

@article{10.7717/peerj-cs.103,
  title = {SymPy: symbolic computing in Python},
  author = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and \v
            {C}ert\'{i}k, Ond\v{r}ej and Kirpichev, Sergey B. and Rocklin,
            Matthew and Kumar, AMiT and Ivanov, Sergiu and Moore, Jason K. and
            Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger,
            Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta,
            Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian
            and Curry, Matthew J. and Terrel, Andy R. and Rou\v{c}ka, \v{S}t\v{e}
            p\'{a}n and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and
            Cimrman, Robert and Scopatz, Anthony},
  year = 2017,
  month = jan,
  keywords = {Python, Computer algebra system, Symbolics},
  abstract = { SymPy is an open source computer algebra system written in pure
              Python. It is built with a focus on extensibility and ease of use,
              through both interactive and programmatic applications. These
              characteristics have led SymPy to become a popular symbolic library
              for the scientific Python ecosystem. This paper presents the
              architecture of SymPy, a description of its features, and a
              discussion of select submodules. The supplementary material provide
              additional examples and further outline details of the architecture
              and features of SymPy. },
  volume = 3,
  pages = {e103},
  journal = {PeerJ Computer Science},
  issn = {2376-5992},
  url = {https://doi.org/10.7717/peerj-cs.103},
  doi = {10.7717/peerj-cs.103},
}
